"use client";
import { useEffect, useMemo, useState } from "react";
import "./globals.css";
import { Assistant } from "next/font/google";
import {
  ICartTotal,
  IProducts,
  IProductsToAdd,
} from "@/shared/model/products.model";
import {
  CartContext,
  CartTotalContext,
  SearchTextContext,
} from "@/core/context";
import "@smastrom/react-rating/style.css";

const assistant = Assistant({ subsets: ["latin"] });

export const metadata = {
  title: "Amazon Clone",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [cartItems, setCartItems] = useState<IProductsToAdd[]>([]);
  const [total, setTotal] = useState<ICartTotal | null>(null);
  const [searchText, setSearchText] = useState<string | null>(null);

  const cartItemsState = useMemo(
    () => ({
      cartItems,
      setCartItems,
    }),
    [cartItems]
  );
  const cartItemsTotalState = useMemo(
    () => ({
      total,
      setTotal,
    }),
    [total]
  );
  const searchTextState = useMemo(
    () => ({
      searchText,
      setSearchText,
    }),
    [searchText]
  );

  useEffect(() => {
    if (localStorage.getItem("cartItems")) {
      const previousItemsInCart = JSON.parse(
        localStorage.getItem("cartItems") as string
      );
      setCartItems(previousItemsInCart);
    } else {
      setCartItems([]);
    }
  }, []);

  return (
    <html lang="en">
      <body className={assistant.className}>
        <CartContext.Provider value={cartItemsState}>
          <CartTotalContext.Provider value={cartItemsTotalState}>
            <SearchTextContext.Provider value={searchTextState}>
              {children}
            </SearchTextContext.Provider>
          </CartTotalContext.Provider>
        </CartContext.Provider>
      </body>
    </html>
  );
}
