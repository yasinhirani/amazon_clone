"use client";
import { useEffect, useMemo, useState } from "react";
import "./globals.css";
import { Assistant } from "next/font/google";
import {
  ICartTotal,
  IProducts,
  IProductsToAdd,
} from "@/shared/model/products.model";
import {
  AuthDataContext,
  CartContext,
  CartTotalContext,
  SearchTextContext,
} from "@/core/context";
import "@smastrom/react-rating/style.css";
import Navbar from "@/components/Navbar";
import { usePathname } from "next/navigation";
import { IAuthData } from "@/core/model/auth.model";
import { Toaster } from "react-hot-toast";

const assistant = Assistant({ subsets: ["latin"] });

export const metadata = {
  title: "Amazon Clone",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();

  const [cartItems, setCartItems] = useState<IProductsToAdd[]>([]);
  const [total, setTotal] = useState<ICartTotal | null>(null);
  const [searchText, setSearchText] = useState<string | null>(null);
  const [authData, setAuthData] = useState<IAuthData | null>(null);

  const cartItemsState = useMemo(
    () => ({
      cartItems,
      setCartItems,
    }),
    [cartItems]
  );
  const cartItemsTotalState = useMemo(
    () => ({
      total,
      setTotal,
    }),
    [total]
  );
  const searchTextState = useMemo(
    () => ({
      searchText,
      setSearchText,
    }),
    [searchText]
  );
  const AuthDataState = useMemo(
    () => ({
      authData,
      setAuthData,
    }),
    [authData]
  );

  useEffect(() => {
    if (localStorage.getItem("cartItems")) {
      const previousItemsInCart = JSON.parse(
        localStorage.getItem("cartItems") as string
      );
      setCartItems(previousItemsInCart);
    } else {
      setCartItems([]);
    }
    if (localStorage.getItem("authData")) {
      const authValues = JSON.parse(localStorage.getItem("authData") as string);
      setAuthData(authValues);
    } else {
      setAuthData(null);
    }
  }, []);

  return (
    <html lang="en">
      <body className={assistant.className}>
        <CartContext.Provider value={cartItemsState}>
          <CartTotalContext.Provider value={cartItemsTotalState}>
            <SearchTextContext.Provider value={searchTextState}>
              <AuthDataContext.Provider value={AuthDataState}>
                <div className="w-full h-full flex flex-col">
                  {!(
                    pathname.includes("/login") ||
                    pathname.includes("/register")
                  ) && <Navbar />}
                  {children}
                </div>
                <Toaster />
              </AuthDataContext.Provider>
            </SearchTextContext.Provider>
          </CartTotalContext.Provider>
        </CartContext.Provider>
      </body>
    </html>
  );
}
